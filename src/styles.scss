// A theme is a collection of 3 palettes primary,accent,warn
// A pallete represnts a color portion and is represented as Sass Map
// a pallete has hues with identifiers 
// 50,100 ,200,300,400,500,600,700,800,900
//& nested sass map named constrast with same identifiers
//basically constrast is used as color when that hue is used as background


//Step1  
@use '@angular/material' as mat;
//Include the core mixin only once & this contains prerequisite styles
// for many features such as ripples
//The core mixin must be included exactly once for your application, 
//even if you define multiple themes.
//Including the core mixin multiple times will result in duplicate CSS in your application.
@include mat.core();


//Step2 => defining Theme
// Constructing the theme first requires defining your primary and accent palettes, 
// with an optional warn palette. 
//The define-palette Sass function accepts a color palette, 

$my-primary: mat.define-palette(mat.$indigo-palette, 500);
$my-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The "warn" palette is optional and defaults to red if not specified.
$my-warn: mat.define-palette(mat.$red-palette);

//You can construct a theme by calling either define-light-theme or define-dark-theme 
//with the result from define-palette. The choice of a light versus a dark theme 
//determines the background and foreground colors used throughout the components.

$my-theme: mat.define-light-theme((
 color: (
   primary: $my-primary,
   accent: $my-accent,
   warn: $my-warn,
 )
));

@include mat.all-component-themes($my-theme);